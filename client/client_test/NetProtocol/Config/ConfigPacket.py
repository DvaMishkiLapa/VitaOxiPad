# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Config

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConfigPacket(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConfigPacket()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConfigPacket(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConfigPacket
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConfigPacket
    def TouchConfig(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ConfigPacket
    def MotionActivate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConfigPacket
    def Disconnect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def ConfigPacketStart(builder): builder.StartObject(3)
def Start(builder):
    return ConfigPacketStart(builder)
def ConfigPacketAddTouchConfig(builder, touchConfig): builder.PrependUint8Slot(0, touchConfig, 0)
def AddTouchConfig(builder, touchConfig):
    return ConfigPacketAddTouchConfig(builder, touchConfig)
def ConfigPacketAddMotionActivate(builder, motionActivate): builder.PrependBoolSlot(1, motionActivate, 0)
def AddMotionActivate(builder, motionActivate):
    return ConfigPacketAddMotionActivate(builder, motionActivate)
def ConfigPacketAddDisconnect(builder, disconnect): builder.PrependBoolSlot(2, disconnect, 0)
def AddDisconnect(builder, disconnect):
    return ConfigPacketAddDisconnect(builder, disconnect)
def ConfigPacketEnd(builder): return builder.EndObject()
def End(builder):
    return ConfigPacketEnd(builder)