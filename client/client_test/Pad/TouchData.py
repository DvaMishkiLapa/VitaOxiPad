# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Pad

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TouchData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TouchData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTouchData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TouchData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TouchData
    def Reports(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 6
            from Pad.TouchReport import TouchReport
            obj = TouchReport()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # TouchData
    def ReportsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # TouchData
    def ReportsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

def TouchDataStart(builder): builder.StartObject(1)
def Start(builder):
    return TouchDataStart(builder)
def TouchDataAddReports(builder, reports): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(reports), 0)
def AddReports(builder, reports):
    return TouchDataAddReports(builder, reports)
def TouchDataStartReportsVector(builder, numElems): return builder.StartVector(6, numElems, 2)
def StartReportsVector(builder, numElems):
    return TouchDataStartReportsVector(builder, numElems)
def TouchDataEnd(builder): return builder.EndObject()
def End(builder):
    return TouchDataEnd(builder)