namespace NetProtocol;

// Handshake
enum Endpoint : ubyte {
    Client,
    Server,
}

table Handshake {
    endpoint: Endpoint;
    port: ushort;
    heartbeat_freq: uint;
}

// Config
table Config
{
    /// Minimal interval in microseconds between sending packets (> 4500us)
    polling_interval: ulong;
}

// Pad
struct ButtonsData
{
    select: bool;
    start: bool;
    up: bool;
    right: bool;
    down: bool;
    left: bool;
    lt: bool;
    rt: bool;
    triangle: bool;
    circle: bool;
    cross: bool;
    square: bool;
    vol_up: bool;
    vol_down: bool;
    ps: bool;
}

struct Vector3
{
    x: float;
    y: float;
    z: float;
}

struct MotionData
{
     gyro: Vector3;
     accelerometer: Vector3;
}

struct TouchReport
{
    pressure: ubyte;
    id: ubyte;
    x: ushort;
    y: ushort;
    // timestamp: ulong;
}

table TouchData
{
    reports: [TouchReport];
}

table Pad
{
    buttons: ButtonsData;
    lx: ubyte;
    ly: ubyte;
    rx: ubyte;
    ry: ubyte;
    front_touch: TouchData;
    back_touch: TouchData;
    motion: MotionData;
    timestamp: ulong;
    charge_percent: ubyte;
}

// Packet
union PacketContent {
    Config,
    Handshake,
    Pad
}

table Packet {
    content: PacketContent;
}

root_type Packet;
